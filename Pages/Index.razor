@page "/"

<div class="main">
    <div class="top-row">
        <h1>Be 𝐛𝐨𝐥𝐝</h1>
    </div>

    <div class="content px-4">
        <p>
            Make a 𝐛𝐨𝐥𝐝 statement, even if the app/site won't let you apply any formatting.
        </p>
        <p>
            Just copy the converted text (it will be plain Unicode text) and paste it in the app/site 
            (i.e. <a href="https://twitter.com/kzu/status/1329883359154155521?s=20">Twitter!</a>).
        </p>
        <p>
            <input type="text" @bind:event="oninput" @bind="Text" />
        </p>
        <p>@bold</p>
        <p>@unicode</p>
        <a href="https://github.com/kzu/bold"><img src="https://img.shields.io/badge/-source-181717.svg?logo=GitHub" alt="GitHub"></a>
    </div>
</div>

@code {
    Dictionary<char, (string bold, string unicode)> map = new()
    {
        { 'a', ("𝐚", "U+1D41A") },
        { 'b', ("𝐛", "U+1D41B") },
        { 'c', ("𝐜", "U+1D41C") },
        { 'd', ("𝐝", "U+1D41D") },
        { 'e', ("𝐞", "U+1D41E") },
        { 'f', ("𝐟", "U+1D41F") },
        { 'g', ("𝐠", "U+1D420") },
        { 'h', ("𝐡", "U+1D421") },
        { 'i', ("𝐢", "U+1D422") },
        { 'j', ("𝐣", "U+1D423") },
        { 'k', ("𝐤", "U+1D424") },
        { 'l', ("𝐥", "U+1D425") },
        { 'm', ("𝐦", "U+1D426") },
        { 'n', ("𝐧", "U+1D427") },
        { 'o', ("𝐨", "U+1D428") },
        { 'p', ("𝐩", "U+1D429") },
        { 'q', ("𝐪", "U+1D42A") },
        { 'r', ("𝐫", "U+1D42B") },
        { 's', ("𝐬", "U+1D42C") },
        { 't', ("𝐭", "U+1D42D") },
        { 'u', ("𝐮", "U+1D42E") },
        { 'v', ("𝐯", "U+1D42F") },
        { 'w', ("𝐰", "U+1D430") },
        { 'x', ("𝐱", "U+1D431") },
        { 'y', ("𝐲", "U+1D432") },
        { 'z', ("𝐳", "U+1D433") },

        { 'A', ("𝐀", "U+1D400") },
        { 'B', ("𝐁", "U+1D401") },
        { 'C', ("𝐂", "U+1D402") },
        { 'D', ("𝐃", "U+1D403") },
        { 'E', ("𝐄", "U+1D404") },
        { 'F', ("𝐅", "U+1D405") },
        { 'G', ("𝐆", "U+1D406") },
        { 'H', ("𝐇", "U+1D407") },
        { 'I', ("𝐈", "U+1D408") },
        { 'J', ("𝐉", "U+1D409") },
        { 'K', ("𝐊", "U+1D40A") },
        { 'L', ("𝐋", "U+1D40B") },
        { 'M', ("𝐌", "U+1D40C") },
        { 'N', ("𝐍", "U+1D40D") },
        { 'O', ("𝐎", "U+1D40E") },
        { 'P', ("𝐏", "U+1D40F") },
        { 'Q', ("𝐐", "U+1D410") },
        { 'R', ("𝐑", "U+1D411") },
        { 'S', ("𝐒", "U+1D412") },
        { 'T', ("𝐓", "U+1D413") },
        { 'U', ("𝐔", "U+1D414") },
        { 'V', ("𝐕", "U+1D415") },
        { 'W', ("𝐖", "U+1D416") },
        { 'X', ("𝐗", "U+1D417") },
        { 'Y', ("𝐘", "U+1D418") },
        { 'Z', ("𝐙", "U+1D419") },
    };

    string source = "";
    string bold = "";
    string unicode = "";

    public string Text
    {
        get => source;
        set
        {
            source = value;
            bold = "";
            unicode = "";
            foreach (var c in source)
            {
                if (map.TryGetValue(c, out var u))
                {
                    bold += u.bold;
                    unicode += u.unicode + " ";
                }
                else
                {
                    bold += c;
                    unicode += c + " ";
                }
            }
        }
    }
}